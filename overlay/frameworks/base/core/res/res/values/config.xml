<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2009 The Android Open Source Project
     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at
          http://www.apache.org/licenses/LICENSE-2.0
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds.  Do not translate. -->
<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

     <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
     <bool name="config_automatic_brightness_available">true</bool>

    <!-- True if the display hardware only has brightness buckets rather than a full range of
         backlight values -->
    <bool name="config_displayBrightnessBucketsInDoze">true</bool>

    <!-- Whether the always on display mode is available. -->
    <bool name="config_dozeAlwaysOnDisplayAvailable">true</bool>

    <!-- Control whether the always on display mode is enabled by default. This value will be used
         during initialization when the setting is still null. -->
    <bool name="config_dozeAlwaysOnEnabled">false</bool>

    <!-- Power Management: Specifies whether to decouple the interactive state of the
         device from the display on/off state.
         When false, setInteractive(..., true) will be called before the display is turned on
         and setInteractive(..., false) will be called after the display is turned off.
         This mode provides best compatibility for devices that expect the interactive
         state to be tied to the display state.
         When true, setInteractive(...) will be called independently of whether the display
         is being turned on or off.  This mode enables the power manager to reduce
         clocks and disable the touch controller while the display is on.
         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.
         Refer to power.h for details.
    -->
    <bool name="config_powerDecoupleInteractiveModeFromDisplay">true</bool>

    <!-- IWLAN data service package name to bind to by default. If none is specified in an overlay, an
         empty string is passed in -->
    <string name="config_wlan_data_service_package" translatable="false">vendor.qti.iwlan</string>

    <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
        percent. The length of this array is assumed to be one greater than
        config_ambientThresholdLevels. The brightening threshold is calculated as
        lux * (1.0f + CONSTRAINT_VALUE). When the current lux is higher than this threshold,
        the screen brightness is recalculated. See the config_ambientThresholdLevels
        description for how the constraint value is chosen. -->
    <integer-array name="config_ambientBrighteningThresholds">
        <item>2</item>
        <item>5</item>
        <item>10</item>
        <item>30</item>
        <item>100</item>
        <item>400</item>
        <item>600</item>
        <item>1000</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
        percent. The length of this array is assumed to be one greater than
        config_ambientThresholdLevels. The darkening threshold is calculated as
        lux * (1.0f - CONSTRAINT_VALUE). When the current lux is lower than this threshold,
        the screen brightness is recalculated. See the config_ambientThresholdLevels
        description for how the constraint value is chosen. -->
    <integer-array name="config_ambientDarkeningThresholds">
        <item>800</item>
        <item>800</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
    </integer-array>

    <!-- Array of ambient lux threshold values. This is used for determining hysteresis constraint
        values by calculating the index to use for lookup and then setting the constraint value
        to the corresponding value of the array. The new brightening hysteresis constraint value
        is the n-th element of config_ambientBrighteningThresholds, and the new darkening
        hysteresis constraint value is the n-th element of config_ambientDarkeningThresholds.
        The (zero-based) index is calculated as follows: (MAX is the largest index of the array)
        condition                       calculated index
        value < level[0]                0
        level[n] <= value < level[n+1]  n+1
        level[MAX] <= value             MAX+1 -->
    <integer-array name="config_ambientThresholdLevels">
        <item>2</item>
        <item>10</item>
        <item>30</item>
        <item>100</item>
        <item>800</item>
        <item>2000</item>
        <item>4000</item>
    </integer-array>

    <!-- Array of desired screen brightness in nits corresponding to the lux values
        in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
        config_screenBrightnessMaximumNits, the display brightness is defined as the measured
        brightness of an all-white image.
        If this is defined then:
         - config_autoBrightnessLcdBacklightValues should not be defined
         - config_screenBrightnessNits must be defined
         - config_screenBrightnessBacklight must be defined
        This array should have size one greater than the size of the config_autoBrightnessLevels
        array. The brightness values must be non-negative and non-decreasing. This must be
        overridden in platform specific overlays -->
    <array name="config_autoBrightnessDisplayValuesNits">
        <item>4.5</item>
        <item>6.6</item>
        <item>8.0</item>
        <item>20.0</item>
        <item>24.3</item>
        <item>29.7</item>
        <item>34.0</item>
        <item>46.0</item>
        <item>59.0</item>
        <item>76.0</item>
        <item>81.0</item>
        <item>82.0</item>
        <item>82.0</item>
        <item>82.0</item>
        <item>83.0</item>
        <item>83.0</item>
        <item>83.0</item>
        <item>84.0</item>
        <item>84.0</item>
        <item>85.0</item>
        <item>85.0</item>
        <item>85.0</item>
        <item>85.0</item>
        <item>86.0</item>
        <item>86.0</item>
        <item>87.0</item>
        <item>89.0</item>
        <item>90.0</item>
        <item>91.0</item>
        <item>93.0</item>
        <item>94.0</item>
        <item>96.0</item>
        <item>97.0</item>
        <item>99.0</item>
        <item>100.0</item>
        <item>101.0</item>
        <item>104.0</item>
        <item>105.0</item>
        <item>106.0</item>
        <item>108.0</item>
        <item>109.0</item>
        <item>111.0</item>
        <item>112.0</item>
        <item>114.0</item>
        <item>116.0</item>
        <item>137.0</item>
        <item>157.0</item>
        <item>180.0</item>
        <item>205.0</item>
        <item>226.0</item>
        <item>257.0</item>
        <item>280.0</item>
        <item>295.0</item>
        <item>369.0</item>
        <item>400.0</item>
        <item>416.7</item>
        <item>433.3</item>
        <item>450.0</item>
        <item>466.7</item>
        <item>483.3</item>
        <item>500.0</item>
        <item>512.5</item>
        <item>525.0</item>
        <item>537.5</item>
        <item>550.0</item>
        <item>562.5</item>
        <item>575.0</item>
        <item>587.5</item>
        <item>600.0</item>
        <item>610.0</item>
        <item>620.0</item>
        <item>630.0</item>
        <item>640.0</item>
        <item>650.0</item>
        <item>660.0</item>
        <item>670.0</item>
        <item>680.0</item>
        <item>690.0</item>
        <item>700.0</item>
        <item>705.0</item>
        <item>710.0</item>
        <item>715.0</item>
        <item>720.0</item>
        <item>725.0</item>
        <item>730.0</item>
        <item>735.0</item>
        <item>740.0</item>
        <item>745.0</item>
        <item>750.0</item>
        <item>755.0</item>
        <item>760.0</item>
        <item>765.0</item>
        <item>770.0</item>
        <item>775.0</item>
        <item>800.0</item>
        <item>816.7</item>
        <item>833.3</item>
        <item>850.0</item>
        <item>866.7</item>
        <item>883.3</item>
        <item>900.0</item>
        <item>914.3</item>
        <item>928.6</item>
        <item>942.9</item>
        <item>957.1</item>
        <item>971.4</item>
        <item>985.7</item>
        <item>1000.0</item>
    </array>

    <!-- Array of light sensor lux values to define our levels for auto backlight brightness support.
        The N entries of this array define N + 1 control points as follows:
        (1-based arrays)
        Point 1:            (0, value[1]):             lux <= 0
        Point 2:     (level[1], value[2]):  0        < lux <= level[1]
        Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
        ...
        Point N+1: (level[N], value[N+1]):  level[N] < lux
        The control points must be strictly increasing.  Each control point
        corresponds to an entry in the brightness backlight values arrays.
        For example, if lux == level[1] (first element of the levels array)
        then the brightness will be determined by value[2] (second element
        of the brightness values array).
        Spline interpolation is used to determine the auto-brightness
        backlight values for lux levels between these control points.
        Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>2</item>
        <item>5</item>
        <item>9</item>
        <item>13</item>
        <item>17</item>
        <item>21</item>
        <item>26</item>
        <item>30</item>
        <item>40</item>
        <item>83</item>
        <item>104</item>
        <item>200</item>
        <item>400</item>
        <item>500</item>
        <item>600</item>
        <item>700</item>
        <item>800</item>
        <item>1000</item>
        <item>1200</item>
        <item>1500</item>
        <item>1800</item>
        <item>2000</item>
        <item>2165</item>
        <item>2680</item>
        <item>3000</item>
        <item>3540</item>
        <item>4000</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the lux values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         The brightness values must be between 0 and 255 and be non-decreasing.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>4</item>
        <item>4</item>
        <item>4</item>
        <item>8</item>
        <item>15</item>
        <item>20</item>
        <item>26</item>
        <item>35</item>
        <item>45</item>
        <item>46</item>
        <item>46</item>
        <item>46</item>
        <item>60</item>
        <item>60</item>
        <item>60</item>
        <item>64</item>
        <item>66</item>
        <item>70</item>
        <item>73</item>
        <item>80</item>
        <item>88</item>
        <item>110</item>
        <item>130</item>
        <item>135</item>
        <item>145</item>
        <item>180</item>
        <item>200</item>
        <item>240</item>
        <item>255</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
        percent. The length of this array is assumed to be one greater than
        config_screenThresholdLevels. The darkening threshold is calculated as
        screenBrightness * (1.0f - CONSTRAINT_VALUE). When the new screen brightness is lower than
        this threshold, it is applied. See the config_screenThresholdLevels description for how
        the constraint value is chosen. -->
    <integer-array name="config_screenBrightnessBacklight">
        <item>1</item>
        <item>255</item>
    </integer-array>

    <!-- An array of floats describing the screen brightness in nits corresponding to the backlight
        values in the config_screenBrightnessBacklight array.  On OLED displays these  values
        should be measured with an all white image while the display is in the fully on state.
        Note that this value should *not* reflect the maximum brightness value for any high
        brightness modes but only the maximum brightness value obtainable in a sustainable manner.
        This array should be equal in size to config_screenBrightnessBacklight -->
    <array name="config_screenBrightnessNits">
        <item>4.5</item>
        <item>1000.0</item>
    </array>

    <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
        percent. The length of this array is assumed to be one greater than
        config_screenThresholdLevels. The brightening threshold is calculated as
        screenBrightness * (1.0f + CONSTRAINT_VALUE). When the new screen brightness is higher
        than this threshold, it is applied. See the config_screenThresholdLevels description for
        how the constraint value is chosen. -->
    <integer-array name="config_screenBrighteningThresholds">
        <item>0</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
        percent. The length of this array is assumed to be one greater than
        config_screenThresholdLevels. The darkening threshold is calculated as
        screenBrightness * (1.0f - CONSTRAINT_VALUE). When the new screen brightness is lower than
        this threshold, it is applied. See the config_screenThresholdLevels description for how
        the constraint value is chosen. -->
    <integer-array name="config_screenDarkeningThresholds">
        <item>0</item>
    </integer-array>

    <!-- The maximum range of gamma adjustment possible using the screen
        auto-brightness adjustment setting. -->
    <fraction name="config_autoBrightnessAdjustmentMaxGamma">100%</fraction>

    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
        for debouncing the light sensor.  Different constants are used to debounce the light sensor
        when adapting to brighter or darker environments.  This parameter controls how quickly
        brightness changes occur in response to an observed change in light level that exceeds the
        hysteresis threshold. -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">1000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">1000</integer>

    <!-- Maximum screen brightness allowed by the power manager.
        The user is forbidden from setting the brightness above this level. -->
    <integer name="config_screenBrightnessSettingMaximum">255</integer>

    <!-- Minimum screen brightness setting allowed by the power manager.
        The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">2</integer>

    <!-- Minimum screen brightness allowed by the power manager. -->
    <integer name="config_screenBrightnessDim">6</integer>

    <!-- The bounding path of the cutout region of the main built-in display.
         Must either be empty if there is no cutout region, or a string that is parsable by
         {@link android.util.PathParser}.
         The path is assumed to be specified in display coordinates with pixel units and in
         the display's native orientation, with the origin of the coordinate system at the
         center top of the display. Optionally, you can append either `@left` or `@right` to the
         end of the path string, in order to change the path origin to either the top left,
         or top right of the display.
         To facilitate writing device-independent emulation overlays, the marker `@dp` can be
         appended after the path string to interpret coordinates in dp instead of px units.
         Note that a physical cutout should be configured in pixels for the best results.
         Example for a 10px x 10px square top-center cutout:
                <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z</string>
         Example for a 10dp x 10dp square top-center cutout:
                <string ...>M -5,0 L -5,10 L 5,10 L 5,0 Z @dp</string>
         @see https://www.w3.org/TR/SVG/paths.html#PathData
         -->
    <string translatable="false" name="config_mainBuiltInDisplayCutout">
        M -23,52
        M 23,52
        A 23,23 0 1,0 -23,52
        A 23,23 0 1,0 23,52
        Z
    </string>

    <!-- Like config_mainBuiltInDisplayCutout, but this path is used to report the
         one single bounding rect per device edge to the app via
         {@link DisplayCutout#getBoundingRect}. Note that this path should try to match the visual
         appearance of the cutout as much as possible, and may be smaller than
         config_mainBuiltInDisplayCutout
         -->
    <string translatable="false" name="config_mainBuiltInDisplayCutoutRectApproximation">
        M 0,0
        H -23
        V 75
        H 23
        V 0
        H 0
        Z
    </string>

    <!-- Whether the display cutout region of the main built-in display should be forced to
        black in software (to avoid aliasing or emulate a cutout that is not physically existent).
    -->
    <bool name="config_fillMainBuiltInDisplayCutout">true</bool>

    <!-- If true, the display will be shifted around in ambient mode. -->
    <bool name="config_enableBurnInProtection">true</bool>

    <!-- Indicates whether device has a power button fingerprint sensor. -->
    <bool name="config_is_powerbutton_fps" translatable="false">true</bool>

    <!-- An array of arrays of side fingerprint sensor properties relative to each display.
         Note: this value is temporary and is expected to be queried directly
         from the HAL in the future. -->
    <array name="config_sfps_sensor_props" translatable="false">
        <item>@array/config_sfps_sensor_props_0</item>
    </array>

    <array name="config_sfps_sensor_props_0" translatable="false">
        <item>local:4630946736638489729</item>
        <item>1080</item>
        <item>965</item>
        <item>115</item>
    </array>

    <!-- Display - Dynamic Refresh Rate Topic -->
    <!-- The default refresh rate. Alioth manages this using the peak refresh rate setting, so set
         this value to 0 so it has no effect. -->
    <integer name="config_defaultRefreshRate">0</integer>

    <!-- The default peak refresh rate for a given device. -->
    <integer name="config_defaultPeakRefreshRate">120</integer>

    <!-- default refresh rate in the zone defined by brightness and ambient thresholds -->
    <integer name="config_defaultRefreshRateInZone">120</integer>

    <!-- Keybox configuration for device certification -->
    <string-array name="config_certifiedKeybox" translatable="false">
      <!--
        Keybox entries for EC and RSA keys and certificates.
        These should be populated with valid data for device certification.
        -->
        <item>EC.PRIV:-----BEGIN EC PRIVATE KEY-----
MHcCAQEEICPdEVCfZG4hLD4gI7+Z40UTPnX36fbyo3ZgEvKL+EfuoAoGCCqGSM49
AwEHoUQDQgAE7Auh30VZFoMJw9z+9KXmOtq/U+elcG+B3dvTc3qqTd190G5FgtKm
6c1lBVAFknV4aKmuWBXILwrl0NHoxZClcA==
-----END EC PRIVATE KEY-----</item>
        <item>EC.CERT_1:-----BEGIN CERTIFICATE-----
MIICJDCCAaugAwIBAgIKBYcWRnU1coAEFDAKBggqhkjOPQQDAjApMRkwFwYDVQQF
ExBlMThjNGYyY2E2OTk3MzlhMQwwCgYDVQQMDANURUUwHhcNMTgwNzIzMjAxNzQ3
WhcNMjgwNzIwMjAxNzQ3WjApMRkwFwYDVQQFExBlMjNhNWNkYjZlMmZmMmU5MQww
CgYDVQQMDANURUUwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATsC6HfRVkWgwnD
3P70peY62r9T56Vwb4Hd29NzeqpN3X3QbkWC0qbpzWUFUAWSdXhoqa5YFcgvCuXQ
0ejFkKVwo4G6MIG3MB0GA1UdDgQWBBS+1YHUS6wN8nCe7rzSg/XBvUuAPzAfBgNV
HSMEGDAWgBStaJfkd3MUTYzmNFYScunw3VEFvjAPBgNVHRMBAf8EBTADAQH/MA4G
A1UdDwEB/wQEAwICBDBUBgNVHR8ETTBLMEmgR6BFhkNodHRwczovL2FuZHJvaWQu
Z29vZ2xlYXBpcy5jb20vYXR0ZXN0YXRpb24vY3JsLzA1ODcxNjQ2NzUzNTcyODAw
NDE0MAoGCCqGSM49BAMCA2cAMGQCMGnNe3YBEPKG+geXViM1w3KGdcxVs4E9/peH
NRaICZnZ1Dyr7vAVdzehxkFyTnPmjAIwQF+1JfaDSvvDWgRYwo19E5qcmlsn34gV
y7u7EJqMjKeG+Hp0Yoq4lB9ULqfFlwqA
-----END CERTIFICATE-----</item>
        <item>EC.CERT_2:-----BEGIN CERTIFICATE-----
MIID0TCCAbmgAwIBAgIKA4gmZ2BliZaFnjANBgkqhkiG9w0BAQsFADAbMRkwFwYD
VQQFExBmOTIwMDllODUzYjZiMDQ1MB4XDTE4MDcyMzIwMTM0MloXDTI4MDcyMDIw
MTM0MlowKTEZMBcGA1UEBRMQZTE4YzRmMmNhNjk5NzM5YTEMMAoGA1UEDAwDVEVF
MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEbRn8j/RF9mvI3WO2fMpitlBrovJ+SrHx
4KBjW+Bcg1hnYTATavDaNk2O5ADA2KllkHLDSxIUTMMz6Zb7gJUd+/dC3sI701cR
h0aWV9RzqnlgdR3IChRY4yuG9BSwoTfmo4G2MIGzMB0GA1UdDgQWBBStaJfkd3MU
TYzmNFYScunw3VEFvjAfBgNVHSMEGDAWgBQ2YeEAfIgFCVGLRGxH/xpMyepPEjAP
BgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwICBDBQBgNVHR8ESTBHMEWgQ6BB
hj9odHRwczovL2FuZHJvaWQuZ29vZ2xlYXBpcy5jb20vYXR0ZXN0YXRpb24vY3Js
L0U4RkExOTYzMTREMkZBMTgwDQYJKoZIhvcNAQELBQADggIBAEWkf0CP/lLv+Reh
kJGy3VwI85YJ4ZshZVhUfUD0CcQR9VfGFjEEFN0ako0O+b7noTzZ+fwJqfMClmUk
ZAnhJtYGJgGnF9bmTq5Itr/Cny0hmCkDdrqO52vi4ILz4gEkUVjLBY1A/UVipmVt
kXgvEgdBUBmjv9fD7VP64vandbCAMtZpTCvu8cEAPgyh7EcaVhv1OEy7jahqJOIt
poBvFySwQ0+1zF+7xJzLSQZESGb/eU3NimwLhNN/MFbZCQh3itdYZ0wqD6O3uCV/
Jlx7SEakp+QOMk98IYA8276DJIgKkko3bLSmWrAP13zkea8geWCTFOfYfBo8g1in
mipKNQL/nXTfixdA4OUYzQ/YKfrc5r+ux0EpxYiVEi53/aVMNeSbV+lOzbRctq1V
wJPq4a00HBx1jwtZNmSjPWJjFkNu4bEU9bctCSHLsMsjEO3KGJRTGRATK7Dz43Qu
rhwypvN/ZZl1K4NV+9RY4zNZV6ix9mWl+4cQAiPrJtrvohLtz7FM0LYZ3nz+Ak2j
iCNQsKpOH3fuALhkQ6xZXVKoXmckEmXUc0wSSJ0qfkPD7SVpxjGeeiFmlWXM6ee1
QFwKMcfaWQvqNTbKEihVSqV2BjXvxICsW93WEyqzt/COpcugGlvObeUTrqXuh59l
o9ZGllgJgFJeGqByZDbQGawyB4Rc
-----END CERTIFICATE-----</item>
        <item>EC.CERT_3:-----BEGIN CERTIFICATE-----
MIIFYDCCA0igAwIBAgIJAOj6GWMU0voYMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV
BAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMTYwNTI2MTYyODUyWhcNMjYwNTI0MTYy
ODUyWjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B
AQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS
Sxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7
tv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj
nar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq
C4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ
oVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O
JtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg
sTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi
igHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M
RPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E
aDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um
AGMCAwEAAaOBpjCBozAdBgNVHQ4EFgQUNmHhAHyIBQlRi0RsR/8aTMnqTxIwHwYD
VR0jBBgwFoAUNmHhAHyIBQlRi0RsR/8aTMnqTxIwDwYDVR0TAQH/BAUwAwEB/zAO
BgNVHQ8BAf8EBAMCAYYwQAYDVR0fBDkwNzA1oDOgMYYvaHR0cHM6Ly9hbmRyb2lk
Lmdvb2dsZWFwaXMuY29tL2F0dGVzdGF0aW9uL2NybC8wDQYJKoZIhvcNAQELBQAD
ggIBACDIw41L3KlXG0aMiS//cqrG+EShHUGo8HNsw30W1kJtjn6UBwRM6jnmiwfB
Pb8VA91chb2vssAtX2zbTvqBJ9+LBPGCdw/E53Rbf86qhxKaiAHOjpvAy5Y3m00m
qC0w/Zwvju1twb4vhLaJ5NkUJYsUS7rmJKHHBnETLi8GFqiEsqTWpG/6ibYCv7rY
DBJDcR9W62BW9jfIoBQcxUCUJouMPH25lLNcDc1ssqvC2v7iUgI9LeoM1sNovqPm
QUiG9rHli1vXxzCyaMTjwftkJLkf6724DFhuKug2jITV0QkXvaJWF4nUaHOTNA4u
JU9WDvZLI1j83A+/xnAJUucIv/zGJ1AMH2boHqF8CY16LpsYgBt6tKxxWH00XcyD
CdW2KlBCeqbQPcsFmWyWugxdcekhYsAWyoSf818NUsZdBWBaR/OukXrNLfkQ79Iy
ZohZbvabO/X+MVT3rriAoKc8oE2Uws6DF+60PV7/WIPjNvXySdqspImSN78mflxD
qwLqRBYkA3I75qppLGG9rp7UCdRjxMl8ZDBld+7yvHVgt1cVzJx9xnyGCC23Uaic
MDSXYrB4I4WHXPGjxhZuCuPBLTdOLU8YRvMYdEvYebWHMpvwGCF6bAx3JBpIeOQ1
wDB5y0USicV3YgYGmi+NZfhA4URSh77Yd6uuJOJENRaNVTzk
-----END CERTIFICATE-----</item>
        <item>RSA.PRIV:-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----</item>
        <item>RSA.CERT_1:-----BEGIN CERTIFICATE-----
MIIFETCCAvmgAwIBAgIKAVhTVJRFMIkmRTANBgkqhkiG9w0BAQsFADApMRkwFwYD
VQQFExBlMThjNGYyY2E2OTk3MzlhMQwwCgYDVQQMDANURUUwHhcNMTgwNzIzMjAx
NzM1WhcNMjgwNzIwMjAxNzM1WjApMRkwFwYDVQQFExBlMjNhNWNkYjZlMmZmMmU5
MQwwCgYDVQQMDANURUUwggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQDD
XTVtQtUuf0aZr0EP7rXp8YX60feAKDWN0a82sX6ZMbq73akri2hyOlQ5DwO4F2xA
Q2RR5IrWtzAGrLNgh4tmlQAdeqfCxlCY+a8LQh6nSTSr41QTx8opWPU77SV7Kh1s
ZJlYHfzHHimvLY/OhNDOoS7DrvrO+0lrq+kZI+i6kwl/IzsgsZjI/YipaqS3cYSi
hkQApmgrx5DIT9lUk4U1NrB2jD8zV66eNjMl7IaJFU44fhg/hIARP+fw/Kd9ilNr
y3UyFOGAcFJP+oeN48sPyqjHGCpKSOU0gjyb0DZ4uli2S7NqRkst9d91nZ7YIjFQ
kAnDMGCzxac2PBVEUcrAp4y9f+4FjOW3tgnvbUoS+mlVQXvVEAFLjEgVn85cAvDe
ngfJoaqwfccWEttSnNr+YVWV4NsYX663/wJ/kFeXRzYwSsbl7F7Inh3ZVTelo5Ow
rhEkA+H9ODYbfQzNDg5vpJLommYD6qb/TNi/n8rwQnhsSVbnOnoJNCsjcKci2X8C
AwEAAaOBujCBtzAdBgNVHQ4EFgQUuoU9FcKq9bSehpUT2+78aKFkzEswHwYDVR0j
BBgwFoAUXu6g9FzerKg37LaULPfvE04Typ4wDwYDVR0TAQH/BAUwAwEB/zAOBgNV
HQ8BAf8EBAMCAgQwVAYDVR0fBE0wSzBJoEegRYZDaHR0cHM6Ly9hbmRyb2lkLmdv
b2dsZWFwaXMuY29tL2F0dGVzdGF0aW9uL2NybC8wMTU4NTM1NDk0NDUzMDg5MjY0
NTANBgkqhkiG9w0BAQsFAAOCAgEAERpUCubcUHhDLk5zOs/xnPEdvjXTZCE7CQO1
dQqhbqcaCLVYRx4D7/JEzh1qQaN+YzvVukBG7IgmNtmgG2cdsJIUCwix7eoFee9p
8m9+ChSktjimJ3N0bQEJmGzLnTHhBMts+LpSJUOhBG1jsI4u9To71fzVpRZGcHMc
FB1hKXwdNW8dE2Bg5Tg+Kt3NQXrq4QijdqXJ52fOrTAyucgNVje0+ihB0tZcGj6C
wqpDjIUsO2Z5hjHti7+TmHR5eEW4BDEFOmM9n95Htl+k2LqQ0q6AmBTj1gb8H5E+
q8jYDGX+KwPV6fhuXh543Za3IsWkUYFeLI5sboeIAuovr0xuZCD+M9dMAbmeacre
He9dJHvwCTZApZrTGvrj+YvSByLzfOeX+L7PsDS9Umu757WRZj1WtabXiB1682ip
4Zly/Ho3tD1uXT/0Ns2+6BYhOAe6kBQcbS4YXRyBMzBbGyVIUwv68CDH0IhU/Jgd
zAlzNRMAYBk74uoAIokbaC5updUZM3hx3PR+BYV1mdAD9vmTJmdH5+32+m1gmez4
CtrTnAMoYgpzHTtmGbSX5M7yHuxe8gDAEvmE6Bft0GLtB6ur/P/mkr87JXnJ4Vh1
VnAGLT9BKNltYuQ9XX4vHYLISjdASmNpNEY+hoY/O8NvzQn+t0ZPF3lL1ABsYGDS
AldOiPM=
-----END CERTIFICATE-----</item>
        <item>RSA.CERT_2:-----BEGIN CERTIFICATE-----
MIIFfzCCA2egAwIBAgIKA4gmZ2BliZaFnTANBgkqhkiG9w0BAQsFADAbMRkwFwYD
VQQFExBmOTIwMDllODUzYjZiMDQ1MB4XDTE4MDcyMzIwMTMyNFoXDTI4MDcyMDIw
MTMyNFowKTEZMBcGA1UEBRMQZTE4YzRmMmNhNjk5NzM5YTEMMAoGA1UEDAwDVEVF
MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA1yZeC+RQEXv6YDopNfpK
ldWHv6vnG0V4WsLOrXILFEGYrWWvF/gZJl0z6X37BONEWUPXZKpVerl6UPBCK7ng
jm3XWSrYYTFVceZoJMeVamYguPx2D7Gmj+qrY6Ei4Q32UptczfIRKG6cwb0OpSg1
uOhUP3DS4sPRxxbMbQwzJTLgWy4+i9ZPOSLo3HubzghJPmC4ruanFRGhlH8BBJSH
tEJhoriWw32x/McfMjD/CzQq/TGFYg2WpKQGyLFgYkkfFnWG83X9h13m9CIH8VpF
t4lkM6Ko8ooNDeQr/uuB4H9tlh2Vz0S7Ec3xgisn8VGtWcXzAEAO69IvTzICdxDD
XTRzmHij1pfdzUjEK82aZMk81q9FGkq/2rXypOQJqhLpJFC5yMUehXlkn9Xa2JYo
27vlBt/TbxUhg6ivRmCWrXOxU5mepNJMVOdRznziO7SqHnbYS9oktTJ5shoPGWdI
VNZ3Qzw/mS7wYyljgUWbh1m2EGKvh2VCUaonQu6y6ja730dElHpnZKafGcnyLT2+
L4nQS+RK2a1WZqnAROmWXbyj/N8+roIYKhJEq5ofNQmyMPOckEmf/7ritM6384sr
67FKTZMKm8iToV5N9/zENtJn3f21LxfX4i3u6VjOQu7qqtPCbgC5KE2GLbF5lelN
ML2fN8UZCycX2GA1IhcFNk0CAwEAAaOBtjCBszAdBgNVHQ4EFgQUXu6g9FzerKg3
7LaULPfvE04Typ4wHwYDVR0jBBgwFoAUNmHhAHyIBQlRi0RsR/8aTMnqTxIwDwYD
VR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAgQwUAYDVR0fBEkwRzBFoEOgQYY/
aHR0cHM6Ly9hbmRyb2lkLmdvb2dsZWFwaXMuY29tL2F0dGVzdGF0aW9uL2NybC9F
OEZBMTk2MzE0RDJGQTE4MA0GCSqGSIb3DQEBCwUAA4ICAQCrUyGwn5prRwZMdQd3
v1wuvMrqbkPKo0qUcj12rqTgJg+YbAtk7tapzxLneaFIBTv6S1a9S6vKxXbf/V6m
IkFjS0jXpvyFcGSZdfvwUTJY8+C2+MIwg/T/4XWd9aSalJrCLlyh2ACd7EOtUnin
RLwtfFEDCHI2R4KvTPhFNQBA9RkaI9m9ZH8cEJfBOsxnLtWzsqQBduuezECoGwFV
HrkdvpSB9Jbl2WTWR0yZjkCv+j+9gYDc/kYcnyRzdEfMQRK0fNAK0vC2jw5hCdwV
4xeg6321whxUTITjHUwyQrZBf3ei6XUXsYsf3Y6+1zeb16YsjoV1mO2G/fFMmKm+
jSAU9Zg+rWaKm5GqUTCZkhG7dJZkbPicGljYWkgDl48i7GoCqiN15G2ZUHnvgAtU
13fZBQ0ygZYlmmt51IBDaJ0g0TrUQTUy2+XAUFKXz8vg72dMdP+tyjk+An1bylmc
nn7EczHgrcvdWgRnD6sH3esVjc1nzkyttIMmTzrrDtESe/Hwc6xVdfM/Tpko3Win
ZkChsUsyF6U2D5Gdf1/QTbXPeUlKHE2DKVGDlzA8OH5eqOAjVrf0uIMSWbEDSKEs
os0x7vA2Nys9jjZZp2o5qPe+8aOKeof48VcctFdAg/M+105LEaX/heJPnqr5tpkZ
UKSwax4tj82u5NSwUk64cNdrmw==
-----END CERTIFICATE-----</item>
        <item>RSA.CERT_3:-----BEGIN CERTIFICATE-----
MIIFYDCCA0igAwIBAgIJAOj6GWMU0voYMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV
BAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMTYwNTI2MTYyODUyWhcNMjYwNTI0MTYy
ODUyWjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B
AQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS
Sxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7
tv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj
nar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq
C4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ
oVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O
JtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg
sTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi
igHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M
RPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E
aDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um
AGMCAwEAAaOBpjCBozAdBgNVHQ4EFgQUNmHhAHyIBQlRi0RsR/8aTMnqTxIwHwYD
VR0jBBgwFoAUNmHhAHyIBQlRi0RsR/8aTMnqTxIwDwYDVR0TAQH/BAUwAwEB/zAO
BgNVHQ8BAf8EBAMCAYYwQAYDVR0fBDkwNzA1oDOgMYYvaHR0cHM6Ly9hbmRyb2lk
Lmdvb2dsZWFwaXMuY29tL2F0dGVzdGF0aW9uL2NybC8wDQYJKoZIhvcNAQELBQAD
ggIBACDIw41L3KlXG0aMiS//cqrG+EShHUGo8HNsw30W1kJtjn6UBwRM6jnmiwfB
Pb8VA91chb2vssAtX2zbTvqBJ9+LBPGCdw/E53Rbf86qhxKaiAHOjpvAy5Y3m00m
qC0w/Zwvju1twb4vhLaJ5NkUJYsUS7rmJKHHBnETLi8GFqiEsqTWpG/6ibYCv7rY
DBJDcR9W62BW9jfIoBQcxUCUJouMPH25lLNcDc1ssqvC2v7iUgI9LeoM1sNovqPm
QUiG9rHli1vXxzCyaMTjwftkJLkf6724DFhuKug2jITV0QkXvaJWF4nUaHOTNA4u
JU9WDvZLI1j83A+/xnAJUucIv/zGJ1AMH2boHqF8CY16LpsYgBt6tKxxWH00XcyD
CdW2KlBCeqbQPcsFmWyWugxdcekhYsAWyoSf818NUsZdBWBaR/OukXrNLfkQ79Iy
ZohZbvabO/X+MVT3rriAoKc8oE2Uws6DF+60PV7/WIPjNvXySdqspImSN78mflxD
qwLqRBYkA3I75qppLGG9rp7UCdRjxMl8ZDBld+7yvHVgt1cVzJx9xnyGCC23Uaic
MDSXYrB4I4WHXPGjxhZuCuPBLTdOLU8YRvMYdEvYebWHMpvwGCF6bAx3JBpIeOQ1
wDB5y0USicV3YgYGmi+NZfhA4URSh77Yd6uuJOJENRaNVTzk
-----END CERTIFICATE-----</item>
    </string-array>
</resources>
